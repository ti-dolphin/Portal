# This is a sample build configuration for JavaScript.
# Check our guides at https://confluence.atlassian.com/x/14UWN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: node:14.17

pipelines:
  custom:
    sandbox:
      - step:
          name: Run NPM Install
          size: 2x
          services:
            - docker
          caches:
            - node
          script:
            - npm install
      - step:
          name: Build and Push Docker Image
          image: google/cloud-sdk:latest
          deployment: staging
          size: 2x
          services:
            - docker
          script:
          - export DOCKER_BUILDKIT=0
          - echo $GCLOUD_API_KEYFILE > ~/.gcloud-api-key.json
          - gcloud auth activate-service-account --key-file ~/.gcloud-api-key.json
          - docker login -u _json_key --password-stdin https://$DOCKER_GCR_REPO_URL < ~/.gcloud-api-key.json

          - docker build -t $DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT} .

          - docker tag $DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT} $DOCKER_GCR_REPO_URL/$GCLOUD_PROJECT_ID/$DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT}

          - docker push $DOCKER_GCR_REPO_URL/$GCLOUD_PROJECT_ID/$DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT}

          - export USE_GKE_GCLOUD_AUTH_PLUGIN=True

          - gcloud container clusters get-credentials $K8s_CLUSTER_NAME --zone=$GCLOUD_ZONE --project $GCLOUD_PROJECT_ID

             # DEPLOYMENT
          - kubectl set image deployment ${K8s_DEPLOYMENT_NAME}-sandbox ${K8s_DEPLOYMENT_NAME}-sandbox=$DOCKER_GCR_REPO_URL/$GCLOUD_PROJECT_ID/$DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT} --record

    production:
      - step:
          name: Run NPM Install
          size: 2x
          services:
            - docker
          caches:
            - node
          script:
            - npm install

      - step:
          name: Build and Push Docker Image
          image: google/cloud-sdk:latest
          deployment: production
          size: 2x
          services:
            - docker
          script:
          - export DOCKER_BUILDKIT=0
          - echo $GCLOUD_API_KEYFILE > ~/.gcloud-api-key.json
          - gcloud auth activate-service-account --key-file ~/.gcloud-api-key.json
          - docker login -u _json_key --password-stdin https://$DOCKER_GCR_REPO_URL < ~/.gcloud-api-key.json

          - docker build -t $DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT} .

          - docker tag $DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT} $DOCKER_GCR_REPO_URL/$GCLOUD_PROJECT_ID/$DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT}

          - docker push $DOCKER_GCR_REPO_URL/$GCLOUD_PROJECT_ID/$DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT}

          - export USE_GKE_GCLOUD_AUTH_PLUGIN=True

          - gcloud container clusters get-credentials $K8s_CLUSTER_NAME --zone=$GCLOUD_ZONE --project $GCLOUD_PROJECT_ID

             # DEPLOYMENT
          - kubectl set image deployment ${K8s_DEPLOYMENT_NAME} ${K8s_DEPLOYMENT_NAME}=$DOCKER_GCR_REPO_URL/$GCLOUD_PROJECT_ID/$DOCKER_IMAGE_NAME:${BITBUCKET_COMMIT} --record --namespace=default


options:
  docker: true

definitions:
  services:
    docker:
      memory: 4096
